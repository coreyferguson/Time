
service: time-api

plugins:
  - serverless-secrets

custom:
  stage: ${opt:stage, self:provider.stage}
  accessTokenTableName: accessToken-${self:custom.stage}
  authorizationCodeTableName: authorizationCode-${self:custom.stage}
  clientTableName: client-${self:custom.stage}
  sessionTableName: session-${self:custom.stage}
  userTableName: user-${self:custom.stage}

provider:
  name: aws
  runtime: nodejs6.10
  stage: prod
  region: us-west-2
  environment:
    accessTokenTableName: ${self:custom.accessTokenTableName}
    authorizationCodeTableName: ${self:custom.authorizationCodeTableName}
    clientTableName: ${self:custom.clientTableName}
    sessionTableName: ${self:custom.sessionTableName}
    userTableName: ${self:custom.userTableName}
  environmentSecrets:
    MY_SUPER_SECRET: /time-api/${self:custom.stage}/MY_SUPER_SECRET

functions:
  session:
    handler: src/session/controller/sessionLambda.getSession
    events:
      - http:
          method: GET
          path: session
          cors: true
  status:
    handler: src/ifttt/statusLambda.status
    events:
      - http:
          method: GET
          path: ifttt/v1/status
          cors: true
  verifyIdToken:
    handler: src/auth/authLambda.verifyIdToken
    events:
      - http:
          method: POST
          path: session/verifyIdToken
          cors: true

resources:
  Resources:
    accessTokenTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.accessTokenTableName}
        AttributeDefinitions:
          - AttributeName: accessToken
            AttributeType: S
        KeySchema:
          - AttributeName: accessToken
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    authorizationCodeTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.authorizationCodeTableName}
        AttributeDefinitions:
          - AttributeName: authorizationCode
            AttributeType: S
        KeySchema:
          - AttributeName: authorizationCode
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    clientTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.clientTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    sessionTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.sessionTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    userTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.userTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
